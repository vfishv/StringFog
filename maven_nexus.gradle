apply plugin: 'maven-publish'
apply plugin: 'signing'

def getReleaseRepositoryUrl() {
    return hasProperty('NEXUS_RELEASE_REPOSITORY_URL') ? NEXUS_RELEASE_REPOSITORY_URL
            : "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('NEXUS_SNAPSHOT_REPOSITORY_URL') ? NEXUS_SNAPSHOT_REPOSITORY_URL
            : "https://oss.sonatype.org/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    def pFile = file("${rootDir}/local.properties")
    Properties p = new Properties()
    pFile.withInputStream { stream->
        p.load(stream)
    }
    return p.getProperty('NEXUS_USERNAME')
}

def getRepositoryPassword() {
    def pFile = file("${rootDir}/local.properties")
    Properties p = new Properties()
    pFile.withInputStream { stream->
        p.load(stream)
    }
    return p.getProperty('NEXUS_PASSWORD')
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            group = GROUP
            artifactId = ARTIFACTID
            version = VERSION
            from components.java

            pom {
                name = POM_NAME
                description = POM_DESCRIPTION
                url = POM_URL
                licenses {
                    license {
                        name = POM_LICENCE_NAME
                        url = POM_LICENCE_URL
                    }
                }
                developers {
                    developer {
                        id = POM_DEVELOPER_ID
                        name = POM_DEVELOPER_NAME
                        email = POM_DEVELOPER_EMAIL
                    }
                }
                scm {
                    connection = POM_SCM_CONNECTION
                    developerConnection = POM_SCM_CONNECTION
                    url = POM_URL
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = getReleaseRepositoryUrl()
            def snapshotsRepoUrl = getSnapshotRepositoryUrl()
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = getRepositoryUsername()
                password = getRepositoryPassword()
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}